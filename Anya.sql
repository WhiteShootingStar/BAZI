DROP TABLE SCORE;
DROP TABLE DOG;
DROP TABLE OOWNER;

DROP TABLE JJUDGE;


CREATE TABLE OOWNER (
IDO NUMBER(2) NOT NULL,
ONAME VARCHAR2(15),
CONSTRAINT OWNER_ID PRIMARY KEY(IDO)
);

INSERT INTO OOWNER VALUES( 1, 'ADAM');
INSERT INTO OOWNER VALUES( 2, 'BILL');
INSERT INTO OOWNER VALUES( 3, 'CORBYN');
INSERT INTO OOWNER VALUES( 4, 'DRAKE');
INSERT INTO OOWNER VALUES( 5, 'EVAN');

CREATE TABLE DOG(
IDD NUMBER(2) NOT NULL,
DNAME VARCHAR2(15),
DOWNER NUMBER(2),
DBREED VARCHAR2(15),
DDOB DATE,
CONSTRAINT DOG_ID PRIMARY KEY(IDD),
CONSTRAINT DOG_OWNER FOREIGN KEY (DOWNER) REFERENCES OOWNER(IDO));
 
INSERT INTO DOG VALUES( 1, 'AXY', 1, 'POMERANIAN',  TO_DATE('17-05-2010', 'DD.MM.YYYY'));
INSERT INTO DOG VALUES( 2, 'BONNY', 2, 'AKITA', TO_DATE('20.09.2010', 'DD.MM.YYYY'));
INSERT INTO DOG VALUES( 3, 'CORNY', 3, 'ESKIMO DOG', TO_DATE('01-04-2012', 'DD.MM.YYYY'));
INSERT INTO DOG VALUES( 4, 'FOXY', 1, 'FOXHOUND', TO_DATE('18-06-2009', 'DD.MM.YYYY'));
INSERT INTO DOG VALUES( 5, 'BASHI', 5, 'BASENJI', TO_DATE('23-07-2008', 'DD.MM.YYYY'));
INSERT INTO DOG VALUES( 6, 'BIRK', 2, 'BICHON FRISE', TO_DATE('09-08-2010', 'DD.MM.YYYY'));
INSERT INTO DOG VALUES( 7, 'MOUSE', 3, 'MUDI', TO_DATE('21-08-2007', 'DD.MM.YYYY')); 
INSERT INTO DOG VALUES( 8, 'VAX', 4, 'POODLE', TO_DATE('30-11-2013', 'DD.MM.YYYY'));
INSERT INTO DOG VALUES( 9, 'MULTI', 2, 'GOLDADOR', TO_DATE('06-12-2010', 'DD.MM.YYYY'));

CREATE TABLE JJUDGE(
IDJ NUMBER(1) NOT NULL,
JNAME VARCHAR2(15),
SALARY NUMBER(4),
CONSTRAINT JUDGE_ID PRIMARY KEY(IDJ)
);

select * from jjudge;


INSERT INTO JJUDGE VALUES (1, 'KOWALEVSKI',1000);
INSERT INTO JJUDGE VALUES (2, 'PETRUSHEWSKI',2000);
INSERT INTO JJUDGE VALUES (3, 'TOMASHEWSKI',3000);
INSERT INTO JJUDGE VALUES (4, 'TOM',4000);

CREATE TABLE SCORE (
IDS NUMBER(2) NOT NULL,
COMP VARCHAR2(15),
SDOG NUMBER(2),
POINTS NUMBER(2),
SJUDGE NUMBER(1) NOT NULL,
PRIMARY KEY(IDS),
CONSTRAINT PARTICIPANT FOREIGN KEY(SDOG) REFERENCES DOG(IDD),
CONSTRAINT AUTHOR FOREIGN KEY(SJUDGE) REFERENCES JJUDGE(IDJ)
);

INSERT INTO SCORE VALUES (01, 'AGILITY', 1, 9, 1);
INSERT INTO SCORE VALUES (13, 'AGILITY', 1, 9, 2);
INSERT INTO SCORE VALUES (02, 'AGILITY', 2, 4, 1);
INSERT INTO SCORE VALUES (14, 'AGILITY', 2, 5, 2);
INSERT INTO SCORE VALUES (03, 'AGILITY', 3, 5, 1);
INSERT INTO SCORE VALUES (15, 'AGILITY', 3, 6, 2);
INSERT INTO SCORE VALUES (04, 'AGILITY', 4, 6, 1);
INSERT INTO SCORE VALUES (16, 'AGILITY', 4, 6, 2);
INSERT INTO SCORE VALUES (05, 'AGILITY', 5, 2, 1);
INSERT INTO SCORE VALUES (17, 'AGILITY', 5, 3, 2);
INSERT INTO SCORE VALUES (06, 'AGILITY', 6, 5, 1);
INSERT INTO SCORE VALUES (18, 'AGILITY', 6, 6, 2);
INSERT INTO SCORE VALUES (07, 'AGILITY', 7, 7, 1);
INSERT INTO SCORE VALUES (19, 'AGILITY', 7, 8, 2);
INSERT INTO SCORE VALUES (08, 'AGILITY', 8, 3, 1);
INSERT INTO SCORE VALUES (20, 'AGILITY', 8, 4, 2);
INSERT INTO SCORE VALUES (09, 'AGILITY', 9, 10, 1);
INSERT INTO SCORE VALUES (21, 'AGILITY', 9, 10, 2);
INSERT INTO SCORE VALUES (10, 'SPEED', 2, 8, 3);
INSERT INTO SCORE VALUES (11, 'SPEED', 3, 10, 3);
INSERT INTO SCORE VALUES (12, 'SPEED', 9, 9, 3);
COMMIT;
-----------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE Remainings(temp number) AS A number(4); --increase price
CURSOR TEMPCURS IS SELECT IDJ FROM JJUDGE  WHERE IDJ!=TEMP;
BEGIN 
OPEN TEMPCURS;
LOOP
FETCH TEMPCURS INTO A;
EXIT WHEN TEMPCURS %NOTFOUND;
UPDATE JJUDGE SET SALARY =SALARY+500 WHERE IDJ =A;
--COMMIT;
END LOOP;
CLOSE TEMPCURS;
COMMIT;
END;

CREATE OR REPLACE TRIGGER ANYATRIG -- trigger to call function to increase prices of other services
BEFORE DELETE
ON JJUDGE
FOR EACH ROW
DECLARE pragma autonomous_transaction;
BEGIN
DELETE FROM SCORE A WHERE A.SJUDGE =:OLD.IDJ;
COMMIT;
REMAININGS(:OLD.IDJ);
END;
DROP TRIGGER ANYATRIG;
SELECT * FROM JJUDGE;
DELETE JJUDGE WHERE JJUDGE.IDJ =2;
SELECT * FROM SCORE;

CREATE OR REPLACE PROCEDURE ANYAPROC1 (JUDGE NUMBER) AS B NUMBER(4); CURSOR CUR1 IS SELECT SCORE.IDS FROM SCORE WHERE SCORE.SJUDGE =JUDGE;
BEGIN
OPEN CUR1;
LOOP FETCH  CUR1 INTO B;
EXIT WHEN CUR1 %NOTFOUND;
DELETE FROM SCORE WHERE IDS =B;
END LOOP;
CLOSE CUR1;
END;

CREATE OR REPLACE TRIGGER ANYATRIG1
BEFORE DELETE
ON JJUDGE
FOR EACH ROW
BEGIN
ANYAPROC1(:OLD.IDJ);
END;