DROP TABLE SERVICE_ONE_OPER;
DROP TABLE SERVICE;
DROP TABLE ANIMM;
DROP TABLE OPERATION;
DROP TABLE VISIT;
DROP TABLE ANIMAL;
DROP TABLE OWNER;
DROP TABLE DOCTOR;
DROP TABLE SERVICE_HIST;
CREATE TABLE OWNER
(IDOWN INT NOT NULL ,
FNAME CHAR(15),
SURNAME CHAR(20),
STREET CHAR(30),
HOUSE INT, CONSTRAINT OWN_PR_K PRIMARY KEY(IDOWN));

INSERT INTO OWNER VALUES (1, 'KEK','SHREK','BOLOTO',228);
INSERT INTO OWNER VALUES (2, 'PUDGE','LOTARIST','FOUNTAIN',322);
INSERT INTO OWNER VALUES (3, 'VATALIY','ﾐｦﾐ籍嶢ｬ','Ukraine',27);
INSERT INTO OWNER VALUES (4, 'AMURO','RAY','SIDE',7);
INSERT INTO OWNER VALUES (5, 'KAMILL','BIDAN','SIDE',3);
INSERT INTO OWNER VALUES (6, 'VITYIA','LOX','HOHL',8);
SELECT *
FROM OWNER;

CREATE TABLE ANIMAL 
(IDA INT NOT NULL PRIMARY KEY,
ANAME CHAR(15),
TYPE_ANIM CHAR(15),
DATE_OF_BIRTH DATE,
HIS_OWNER INT,
FOREIGN KEY (HIS_OWNER)
REFERENCES OWNER (IDOWN));

INSERT INTO ANIMAL VALUES (11, 'HARO','DOG',CAST(CAST(2016 AS VARCHAR) +'-'+ CAST(1 AS VARCHAR)+'-'+ CAST(20 AS VARCHAR) AS DATETIME),1);
INSERT INTO ANIMAL VALUES (12, 'PANGO','CAT',CAST(CAST(2015 AS VARCHAR) +'-'+ CAST(4 AS VARCHAR)+'-'+ CAST(12 AS VARCHAR) AS DATETIME),2);
INSERT INTO ANIMAL VALUES (13, 'BALLON','DOG',CAST(CAST(2014 AS VARCHAR) +'-'+ CAST(2 AS VARCHAR)+'-'+ CAST(18 AS VARCHAR) AS DATETIME),2);
INSERT INTO ANIMAL VALUES (14, 'DUSHA','LIZARD',CAST(CAST(2016 AS VARCHAR) +'-'+ CAST(11 AS VARCHAR)+'-'+ CAST(21 AS VARCHAR) AS DATETIME),3);
INSERT INTO ANIMAL VALUES (15, 'NYA','CAT',CAST(CAST(2013 AS VARCHAR) +'-'+ CAST(8 AS VARCHAR)+'-'+ CAST(12 AS VARCHAR) AS DATETIME),4);
INSERT INTO ANIMAL VALUES (16, 'BARSIK','CAT',CAST(CAST(2014 AS VARCHAR) +'-'+ CAST(2 AS VARCHAR)+'-'+ CAST(11 AS VARCHAR) AS DATETIME),5);
INSERT INTO ANIMAL VALUES (17, 'LALKA','HAMSTER',CAST(CAST(2019 AS VARCHAR) +'-'+ CAST(3 AS VARCHAR)+'-'+ CAST(30 AS VARCHAR) AS DATETIME),1);
INSERT INTO ANIMAL VALUES (18, 'SHARKI','GOLDFISH',CAST(CAST(2017 AS VARCHAR) +'-'+ CAST(9 AS VARCHAR)+'-'+ CAST(12 AS VARCHAR) AS DATETIME),1);
SELECT *
FROM ANIMAL;


CREATE TABLE ANIMM(
IDMM int not null PRIMARY KEY,
HEIGTH FLOAT(5),
WEIGTH FLOAT(5),
AN INT,
FOREIGN KEY (AN)
REFERENCES ANIMAL(IDA));
INSERT INTO ANIMM VALUES (200,0.24,12,11);
INSERT INTO ANIMM VALUES (201,0.235,12.1,12);
INSERT INTO ANIMM VALUES (202,0.34,16.7,13);
INSERT INTO ANIMM VALUES (203,0.56,21.8,14);
INSERT INTO ANIMM VALUES (204,0.21,26.3,15);
INSERT INTO ANIMM VALUES (205,0.43,12.8,16);
INSERT INTO ANIMM VALUES (206,2366,1.7,17);
INSERT INTO ANIMM VALUES (207,0.38,18.7,18);



CREATE TABLE DOCTOR 
(IDD INT NOT NULL PRIMARY KEY,
SNAME CHAR(15),
FIELD CHAR(25),
SALARY NUMERIC(6,2));
INSERT INTO DOCTOR VALUES (25,'BOR', 'DIGESTION TRACT', 1000);
INSERT INTO DOCTOR VALUES (26,'CHLOR', 'SKELETON', 1250);
INSERT INTO DOCTOR VALUES (27,'ROM', 'JAWS', 750);
INSERT INTO DOCTOR VALUES (28,'GROZA', 'EYES', 1500);
INSERT INTO DOCTOR VALUES (29,'CHROM', 'REPRODUCTIVE SYSTEM ', 1500);

SELECT *
FROM DOCTOR;


CREATE TABLE VISIT
(IDV INT PRIMARY KEY,
DOC INT,
ANIM INT,
DATE_OF_VIS DATE,
FOREIGN KEY (DOC)
REFERENCES DOCTOR(IDD),
FOREIGN KEY (ANIM)
REFERENCES ANIMAL(IDA));

INSERT INTO VISIT VALUES (90,25,11,CAST(CAST(2018 AS VARCHAR) +'-'+ CAST(3 AS VARCHAR)+'-'+ CAST(15 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (91,26,12,CAST(CAST(2018 AS VARCHAR) +'-'+ CAST(5 AS VARCHAR)+'-'+ CAST(13 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (92,27,13,CAST(CAST(2017 AS VARCHAR) +'-'+ CAST(3 AS VARCHAR)+'-'+ CAST(12 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (93,28,14,CAST(CAST(2016 AS VARCHAR) +'-'+ CAST(6 AS VARCHAR)+'-'+ CAST(21 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (94,29,15,CAST(CAST(2018 AS VARCHAR) +'-'+ CAST(9 AS VARCHAR)+'-'+ CAST(30 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (95,25,16,CAST(CAST(2016 AS VARCHAR) +'-'+ CAST(1 AS VARCHAR)+'-'+ CAST(20 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (96,25,11, CAST(CAST(2019 AS VARCHAR) +'-'+ CAST(10 AS VARCHAR)+'-'+ CAST(30 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (97,26,14, CAST(CAST(2016 AS VARCHAR) +'-'+ CAST(5 AS VARCHAR)+'-'+ CAST(27 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (98,26,18, CAST(CAST(2018 AS VARCHAR) +'-'+ CAST(11 AS VARCHAR)+'-'+ CAST(16 AS VARCHAR) AS DATETIME));
INSERT INTO VISIT VALUES (99,27,18, CAST(CAST(2019 AS VARCHAR) +'-'+ CAST(4 AS VARCHAR)+'-'+ CAST(21 AS VARCHAR) AS DATETIME));



CREATE TABLE SERVICE
(IDSERV int PRIMARY KEY,
SERVICE_NAME CHAR(30),
PRICE NUMERIC(7,2));
INSERT INTO SERVICE VALUES (100,'JAW_FIXING' ,1250);
INSERT INTO SERVICE VALUES (101,'EYES CHEKING AND CURING' ,3500);
INSERT INTO SERVICE VALUES (102,'SKELETON CURING' ,1800);
INSERT INTO SERVICE VALUES (103,'DIGESTION CHEKING' ,2000);
INSERT INTO SERVICE VALUES (104,'REMAINS ANALYSIS' ,1800);
INSERT INTO SERVICE VALUES (105,'REPRODUCTIVE SYSTEM CARE' ,4200);

CREATE TABLE SERVICE_HIST( ID INT PRIMARY KEY, SERVICE_NAME CHAR(30), PRICE NUMERIC(7,2), D DATE);

CREATE TABLE OPERATION 
(IDOPER INT PRIMARY KEY,
TIME_OF_OPER CHAR(15),

VIS INT,
FOREIGN KEY (VIS) REFERENCES VISIT(IDV));

INSERT INTO OPERATION VALUES (80,'12:45'  ,90);
INSERT INTO  OPERATION VALUES (81,'9:00' ,91);
INSERT INTO  OPERATION VALUES (82,'13:00'  ,92);
INSERT INTO OPERATION VALUES (83,'14:50' ,93);
INSERT INTO OPERATION VALUES (84,'9:30'  ,94);
INSERT INTO  OPERATION VALUES (85,'12:20'  ,95);
INSERT INTO  OPERATION VALUES (86,'16:20' ,96);
INSERT INTO  OPERATION VALUES (87, '9:00'  ,97);
INSERT INTO  OPERATION VALUES (88, '14:50' ,97);
INSERT INTO  OPERATION VALUES (89, '13:00' ,98);


CREATE TABLE SERVICE_ONE_OPER
(IDSOO INT PRIMARY KEY,
SERV INT,
OPER INT,
FOREIGN KEY (SERV) REFERENCES SERVICE(IDSERV),
FOREIGN KEY (OPER) REFERENCES OPERATION (IDOPER));

INSERT INTO SERVICE_ONE_OPER VALUES (110 , 100 ,80);
INSERT INTO SERVICE_ONE_OPER VALUES (111 , 101 ,81);
INSERT INTO SERVICE_ONE_OPER VALUES (112 , 102 ,82);
INSERT INTO SERVICE_ONE_OPER VALUES (113 , 103 ,83);
INSERT INTO SERVICE_ONE_OPER VALUES (114 , 104 ,84);
INSERT INTO SERVICE_ONE_OPER VALUES (115 , 105 ,85);
INSERT INTO SERVICE_ONE_OPER VALUES (116 , 105 ,86);
INSERT INTO SERVICE_ONE_OPER VALUES (117 , 105 ,87);
INSERT INTO SERVICE_ONE_OPER VALUES (118 , 105 ,88);
INSERT INTO SERVICE_ONE_OPER VALUES (119 , 105 ,89);
SELECT FNAME,SURNAME,ANAME
FROM OWNER,ANIMAL
WHERE OWNER.IDOWN =ANIMAL.HIS_OWNER;


CREATE OR ALTER TRIGGER DOCTRIG--3 //dont change salary
ON DOCTOR
FOR UPDATE
AS
BEGIN
DECLARE @A INT;
SELECT @A= SALARY FROM inserted ;
IF @A<500 
BEGIN
PRINT('YOU PROVIDED TOO LOW SALARY FOR DOCTOR, THINS FOR HIS/HER FAMILY, VALUE RETURNED TO PREVIOUS');
ROLLBACK;
END;
ELSE 
SELECT @A= SALARY FROM inserted ;
IF @A >5000
BEGIN
PRINT('WOW, YOU ARE DEFINETELY ON THE WAY TO MAKE COMPANY BANKRUPT, OPERATION REVERTED' );
ROLLBACK;
END;
END;
SELECT * FROM DOCTOR;
UPDATE DOCTOR SET SALARY =9999 WHERE SALARY=1500;


CREATE OR ALTER TRIGGER SERVICETRIG --6 //Insert into service histroy
ON SERVICE
INSTEAD OF DELETE
AS
BEGIN
DECLARE @A INT,@B CHAR,@C INT;
SELECT @A =IDSERV FROM deleted;
DELETE FROM SERVICE_ONE_OPER  WHERE SERV =@A;
SELECT @B = SERVICE_NAME FROM deleted;
SELECT @C =PRICE FROM deleted;
INSERT INTO SERVICE_HIST VALUES   (@A, @B,@C, GETDATE());
DELETE FROM SERVICE WHERE IDSERV=@A;
END;
SELECT * FROM SERVICE;
SELECT * FROM SERVICE_HIST;
SELECT* FROM SERVICE_ONE_OPER;
DELETE FROM SERVICE WHERE IDSERV=103;


CREATE OR ALTER TRIGGER OPERTRIG --5 // deleteng from child entity before deleting from this one
ON OPERATION
INSTEAD OF DELETE
AS
BEGIN
DECLARE @A INT;
SELECT @A = IDOPER FROM deleted
DELETE FROM SERVICE_ONE_OPER  WHERE SERVICE_ONE_OPER.OPER=@A  ;
DELETE FROM OPERATION WHERE OPERATION.IDOPER =@A;
END;
SELECT * FROM OPERATION;
DELETE FROM OPERATION WHERE IDOPER =85;

CREATE OR  ALTER TRIGGER OWNERTRIG--1 // dont allow bad names and surnames
ON OWNER
FOR INSERT,update
AS
BEGIN
DECLARE @A CHAR, @B CHAR;
SELECT @A =FNAME FROM inserted;
SELECT @B =SURNAME FROM inserted
IF @A IS NULL OR @B IS NULL
BEGIN
PRINT('CANT DO THAT');
ROLLBACK;
END;
END;
INSERT INTO OWNER VALUES (124, NULL,'LOX123','HOH123L',8);



CREATE OR ALTER PROCEDURE OPER_SERV @IDOP INT -- select services  from the given opeartion
AS
SELECT SERVICE.PRICE, SERVICE.SERVICE_NAME FROM SERVICE, SERVICE_ONE_OPER
WHERE   SERVICE_ONE_OPER.OPER=@IDOP AND SERVICE_ONE_OPER.SERV=SERVICE.IDSERV;

SELECT * FROM OPERATION;
SELECT* FROM SERVICE;
SELECT* FROM SERVICE_ONE_OPER;
EXEC OPER_SERV 86;


SET NOCOUNT ON;

CREATE OR ALTER PROCEDURE  OPER_DOC_INCR @IDOP INT -- increase salary for doctors, who were participating in the given opeartion
AS
SET NOCOUNT ON;
IF EXISTS( SELECT DOCTOR.IDD FROM DOCTOR,VISIT, OPERATION WHERE OPERATION.IDOPER=@IDOP AND OPERATION.VIS=VISIT.IDV AND VISIT.DOC=DOCTOR.IDD)
BEGIN
DECLARE  TEMP_CUR CURSOR FOR 
SELECT DOCTOR.IDD FROM DOCTOR,VISIT, OPERATION WHERE OPERATION.IDOPER=@IDOP AND OPERATION.VIS=VISIT.IDV AND VISIT.DOC=DOCTOR.IDD;
DECLARE @DOCS INT,@X INT;
OPEN TEMP_CUR;
SET @X=0;
FETCH NEXT FROM TEMP_CUR INTO @DOCS
WHILE @@FETCH_STATUS=0
BEGIN UPDATE DOCTOR SET SALARY+=500 WHERE IDD=@DOCS;
FETCH NEXT FROM TEMP_CUR
INTO @DOCS;
SET @X+=1;
END;
CLOSE TEMP_CUR;
DEALLOCATE TEMP_CUR;
PRINT('SALARY CHANGED FOR ' + CAST(@X AS VARCHAR(13)));
RETURN @X;
END;
SELECT * FROM DOCTOR;
SELECT * FROM VISIT;
SELECT * FROM OPERATION;

DECLARE @Q INT;
EXECUTE @Q =OPER_DOC_INCR 84;
sELECT 'HOW MUCH CHANGED' =@Q;

CREATE OR ALTER PROCEDURE RECAL_PRICE @OP INT, @NEW_OP_PRICE FLOAT OUTPUT --recalculate the price depending on the popularity of it
AS
BEGIN
DECLARE  OP_CUR CURSOR FOR
SELECT SERVICE_ONE_OPER.IDSOO FROM SERVICE_ONE_OPER WHERE SERVICE_ONE_OPER.SERV=@OP;
DECLARE @TEMP INT;
DECLARE @COEFF FLOAT,@PRICE INT;
SET @COEFF=0;
OPEN OP_CUR; 
FETCH NEXT FROM OP_CUR INTO @TEMP
WHILE @@FETCH_STATUS=0
BEGIN
SET @COEFF+=0.4
FETCH NEXT FROM OP_CUR INTO @TEMP;
END;
CLOSE OP_CUR;
DEALLOCATE OP_CUR;
PRINT(@COEFF);
SELECT @PRICE =SERVICE.PRICE FROM SERVICE WHERE SERVICE.IDSERV=@OP;
SET @NEW_OP_PRICE=@PRICE*@COEFF;
UPDATE SERVICE SET SERVICE.PRICE=@NEW_OP_PRICE WHERE SERVICE.IDSERV=@OP;
END;

SELECT * FROM  SERVICE;
DECLARE @VAR INT;
EXEC RECAL_PRICE 105,@NEW_OP_PRICE= @VAR OUTPUT;
PRINT(@VAR);

UPDATE SERVICE SET PRICE=1500 WHERE SERVICE.IDSERV=105;